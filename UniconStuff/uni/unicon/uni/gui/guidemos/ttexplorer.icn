import gui
import lang
$include "guih.icn"

class TTExplorer : Dialog(bits_col, date_col, file_col, size_col, tt, tree)
   #
   # Given a Node n, get the full file path it represents by traversing
   # up the tree structure to the root.
   #
   method get_full_path(n)
      local s

      s := ""
      repeat {
         s := n.get_label() || s
         n := n.get_parent_node() | break
      }
      return s
   end

   #
   # Invoked when a sub-tree is expanded (ie: the little + is
   # clicked).  An expansion event also includes contractions
   # too.
   #
   method handle_tree_expansion()
      local n

      n := tree.get_last_expanded()
      #
      # Check whether it was an expansion or a contraction.  If
      # an expansion, load the subtree and refresh the tree.
      #
      if n.is_expanded() then {
         load_subtree(n)
         tree.tree_structure_changed()
      }
   end

   #
   # Given a Node n, load its children with the sub-directories.
   #
   method load_subtree(n)
      local s, name, r1, dir_list, file_list, l, p

      s := get_full_path(n)

      l := get_directory_list(s)

      n.clear_children()
      every name := !!l do {
         if (name ~== "./") & (name ~== "../") then {
            p := stat(s || name) | stop("No stat")
            r1 := TreeTableNode()
            r1.set_label(name)
            if name[-1] == "/" then
               r1.set_always_expandable()
            r1.set_col_data([p.size, ctime(p.mtime)[5:17], p.mode])
            n.add(r1)
         }
      }
   end

   method component_setup()
      local root_node
      self.setup()
      tree := tt.get_table_content()
      tree.connect(self, "handle_tree_expansion", TREE_NODE_EXPANSION_EVENT)
      root_node := TreeTableNode("label=/")
      load_subtree(root_node)
      tt.table_content.set_root_node(root_node)
   end

   method end_dialog()
   end

   method init_dialog()
   end

   method on_text_button_1(ev)
      dispose()
   end

   method setup()
      local text_button_1
      self.set_attribs("size=495,315", "resize=on")
      text_button_1 := TextButton()
      text_button_1.set_pos("50%", "100%-10")
      text_button_1.set_align("c", "b")
      text_button_1.connect(self, "on_text_button_1", ACTION_EVENT)
      text_button_1.clear_toggles()
      text_button_1.set_label("Quit")
      text_button_1.set_internal_alignment("c")
      self.add(text_button_1)
      tt := TreeTable()
      tt.set_pos("50%", "10")
      tt.set_size("100%-20", "100%-50")
      tt.set_align("c", "t")
      tt.set_contents([])
      file_col := TableColumn()
      file_col.set_label("File")
      file_col.set_internal_alignment("l")
      tt.add_column(file_col)
      size_col := TableColumn()
      size_col.set_label("Size")
      size_col.set_internal_alignment("r")
      size_col.set_column_width(75)
      tt.add_column(size_col)
      date_col := TableColumn()
      date_col.set_label("Date")
      date_col.set_internal_alignment("l")
      date_col.set_column_width(100)
      tt.add_column(date_col)
      bits_col := TableColumn()
      bits_col.set_label("Bits")
      bits_col.set_internal_alignment("l")
      bits_col.set_column_width(100)
      tt.add_column(bits_col)
      self.add(tt)
   end

   initially
      self.Dialog.initially()
end



procedure main()
   local d
   d := TTExplorer()
   d.show_modal()
end

### Ivib-v2 layout ##
#class|Canvas|17|Name Table|table|integer|0|4|string|custom|integer|1|s
#tring|table|integer|1|string|table_column|integer|5|string|text_button
#|integer|1|SuperClass Name|string|Dialog|Import Name|string|gui|Button
# Groups|class|ButtonGroupSet|2|Parent Canvas|1|Boxes|list|0|Checkbox G
#roups|class|CheckBoxGroupSet|2|Parent Canvas|1|Boxes|list|0|Gen Indent
#|integer|3|Gen Main|integer|1|Gen Component Setup|integer|1|Gen Init D
#ialog|integer|1|Gen Initially|integer|1|Dialog Struct|class|CDialog|4|
#Min Width|null|Min Height|null|Ticker Rate|null|Attribs|list|1|string|
#resize=on|Name|string|TTExplorer|Width|integer|495|Height|integer|315|
#Items|list|2|class|CanvasTextButton|36|Parent Canvas|1|Name|string|tex
#t_button_1|Class Name|string|TextButton|Import Name|string|gui|X Fix|i
#nteger|1|Y Fix|null|W Fix|null|H Fix|null|W Default|integer|1|H Defaul
#t|integer|1|X Spec|string|50%|Y Spec|string|100%-10|W Spec|integer|40|
#H Spec|integer|23|X Align|string|c|Y Align|string|b|Is shaded|null|Is 
#Button Subclass|integer|1|Draw Border|null|Attribs|list|0|Tooltip|null
#|Accel|null|Event Handlers|list|1|list|2|string|ACTION_EVENT|string|on
#_text_button_1|Class Variable|null|Parent Component|1|Label|string|Qui
#t|No Keyboard|null|Img Up|null|Img Down|null|Img Width|null|Img Height
#|null|Is Checked Flag|null|Is Checkbox Flag|null|Parent CheckBoxGroup|
#null|Parent Button Group|null|Internal Align|string|c|class|CanvasTabl
#e|28|Parent Canvas|1|Name|string|tt|Class Name|string|TreeTable|Import
# Name|string|gui|X Fix|integer|1|Y Fix|integer|1|W Fix|integer|1|H Fix
#|integer|1|W Default|null|H Default|null|X Spec|string|50%|Y Spec|stri
#ng|10|W Spec|string|100%-20|H Spec|string|100%-50|X Align|string|c|Y A
#lign|string|t|Is shaded|null|Is Button Subclass|null|Draw Border|null|
#Attribs|list|0|Tooltip|null|Accel|null|Event Handlers|list|0|Class Var
#iable|integer|1|Parent Component|1|Select One|null|Select Many|null|Co
#lumns|list|4|class|CanvasTableColumn|6|Name|string|file_col|Class Vari
#able|integer|1|Label|string|File|Column Width|integer|166|Internal Ali
#gnment|string|l|Auto width flag|integer|1|class|CanvasTableColumn|6|Na
#me|string|size_col|Class Variable|integer|1|Label|string|Size|Column W
#idth|integer|75|Internal Alignment|string|r|Auto width flag|null|class
#|CanvasTableColumn|6|Name|string|date_col|Class Variable|integer|1|Lab
#el|string|Date|Column Width|integer|100|Internal Alignment|string|l|Au
#to width flag|null|class|CanvasTableColumn|6|Name|string|bits_col|Clas
#s Variable|integer|1|Label|string|Bits|Column Width|integer|100|Intern
#al Alignment|string|l|Auto width flag|null|Initial Focus|null|Event Ha
#ndlers|list|0|
