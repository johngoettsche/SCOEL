#
# $Id: parsedinitiallymethod.icn,v 1.1 2004-02-12 17:01:53 rparlett Exp $
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package parser

class ParsedInitiallyMethod : ParsedFunction()
   method init(n)
      local arglist, locals_node

      self.ParsedFunction.init(n)

      if *n.children = 5 then {
         locals_node := n.children[3]
         initial_node := n.children[4]
         body_node := n.children[5]
      } else {
         locals_node := n.children[6]
         initial_node := n.children[7]
         body_node := n.children[8]
         arglist := n.children[3]
         every x := tree_seq2((\arglist).children[1], "parmlist") do {
            if type(x) == "token" then
               put(args, x.s)
            else
               put(args, x.children[1].s)
         }
      }

      name := "initially"

      every x := tree_seq1a(\locals_node) do {
         l := if x.children[2].tok = 281 then locals else statics
         every tok := tree_seq2(x.children[3], "idlist") do
            put(l, tok.s)
      }
   end

   method to_string()
      return "initially " || to_string_impl()
   end

   initially(n, p)
      self.ParsedFunction.initially(n, p)
end
